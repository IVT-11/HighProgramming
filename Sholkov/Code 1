// подключение библиотек
// стандартный заголовочный файл ввода-вывода
#include<stdio.h>
// математическая библиотека
#include<math.h>
// объявление константы числа Пи для расчётов
#define PI 3.1415926535897
// прототип функции ComputeCos вычисления косинуса
int ComputeCos(double, double, double*);
//прототип функции Calculation вычисления представления
double Calculation(int, double);
// объявление функции ComputeCos
int ComputeCos(double x, double eps, double* res)
{
// для подсчёта количества множителей
int n=1;
// объявление переменных before и after типа double и присваивание им значений
double before=cos(x);
double after=1;
// пока разница между частями больше заданной точности
while (fabs(before - after)>=eps)
{
// присваиваем правой части уравнения значение функции Calculation
after = Calculation(n, x);
// постинкремент
n++;
// вывод на экран значений для проверки
printf(" %d) х=%10.6lf\n", n-1, after);
}
// перенос каретки на следующую строку
printf("\n\n");
// присваиванеи переменной res к результату представления
*res=after;
// возврат значения n
return n;
}
// объявление функции Calculation
double Calculation(int n, double x)
{
// объявление переменных w и res и присваивание значения
double w, res=0;
// цикл нахождения результата
for(int i=1; i<n; ++i)
{
// присваиваем переменной w выражение для простоты записи представления
w=pow(2*n-1,2);
// присваиваем переменной res представление
res=1-(4*pow(x,2)/w*pow(PI,2));
}
// возврат значения res
return res;
}
// главная функция main
int main()
{
// объявление переменных типа double
double x, eps, res;
printf("Введите аргумент косинуса - x: ");
// ввод значения аргумента cos
scanf("%lf", &x);
printf("Введите точность вычислений: ");
// ввод значения точност вычислений
scanf("%lf", &eps);
// перенос каретки на следующую строку
printf("\n\n");
// вызов функции ComputeCos
ComputeCos(x, eps, &res);
// вывод на экран значений выражений cos(x) и представления
printf("\n cos(x): \t%15.10lf\nпредставление: %15.10lf\n", cos(x), res);
// успешное выполнение программы
return 0;
}
