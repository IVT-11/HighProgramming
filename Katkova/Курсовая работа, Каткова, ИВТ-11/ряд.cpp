#include <stdio.h> // подключение стандартной библиотеки, файл ввода-вывода
#include <stdlib.h> // подключение стандартной библиотеки, для работы с функциями
#include <math.h> // подключение математической библиотеки

double f(double ); // прототип функции по нахождению левой части представления
double f(double x) // функция по нахождению левой части представления
{
//return 1/4*log((1+x)/(1-x))+1/2*atanf(x); в таком порядке не вычисляет
return log((1+x)*1.0/(1-x))/4+atan(x)/2; // функция возвращает результат 
}

double row(double ); // прототип функции по нахождению правой части представления
double row(double x) // функция по нахождению правой части представления
{
int count=0; // переменная, которая считает кол-во слагаемых
double n=0,s=0,eps=1e-14; // переменные вещественного типа
{
while(abs(f(x))-abs(s)>eps) // условием выхода из цикла является выражение,
// которое считает разницу между правой и левой сторонами в соответствии с заданной точностью
{
s+=pow(x,4*n+1)/(4*n+1.0); // считает сумму всех слагаемых согласно условию
n++; // перемнная увеличивается на 1
count++; // перемнная для подсчета кол-ва слагаемых
}
printf("\nКол-во слагаемых = %d\n",count); // вывод кол-ва слагаемых
return s; // функция возвращает результат в 
}
}

int main () // функция начала работы программы
{
double n; // переменная вещественного типа
printf("Введите значение x = "); // ввод значения
scanf ("%lf",&n); // считывает введенное значение

while(1) // цикл на проверку ввода корректных значений
{
if(n>-1 && n<1) // условие, при котором представление выполняется
{
printf("\n%.15lf = %.15lf\n", f(n),row(n)); // вывод равенства
break; // выход из цикла после вывода равенства
}
else // условие, при котором представление не выполняется
{
printf("Введите x в пределах от -1 до 1\nx = "); // неправильный ввод
// требуется ввести значение еще раз согласно условию
scanf ("%lf",&n); // считывает введенное значение
}
}

return 0; // функция возвращает число
}